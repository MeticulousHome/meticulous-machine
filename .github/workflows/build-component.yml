name: Build an image component

on:
  workflow_dispatch:  # Allows manual triggering via the UI
    inputs:
      build-option:
        description: 'component to build'
        required: true
        type: string
      build-path:
        description: 'Custom path for artifacts to upload'
        required: false
        type: string
      image:
        description: 'Image config to use'
        required: true
        type: string
        default: 'nightly'

  workflow_call:  # Allows the workflow to be called from other workflows
    inputs:
      build-option:
        description: 'component to build'
        required: true
        type: string
      build-path:
        description: 'Custom path for artifacts to upload'
        required: true
        type: string
      image:
        description: 'Image config to use'
        type: string
        default: 'nightly'

permissions:
  contents: read
  actions: read
  id-token: write

run-name: "Build ${{ github.event.inputs.build-option }} from '${{github.event.inputs.image || 'unset' }}'"

jobs:
  build-component:
    runs-on: ubuntu-24.04
    name: Build ${{ inputs['build-option'] }}
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Git authentication
      run: |
        git config --global url."https://${{ secrets.GH_REPO_WORKFLOW }}:@github.com/".insteadOf "git@github.com:"

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3

    - name: Install Ubuntu dependencies
      run: ./update-sources.sh --install_ubuntu_dependencies

#    - name: Downgrade qemu-user-static
#      run: |
#        sudo apt install -y --allow-downgrades ./misc/qemu-user-static_8.0.4+dfsg-1ubuntu5_amd64.deb
#        sudo apt-mark hold qemu-user-static

    - name: Install qemu-img
      run: |
        sudo apt install -y qemu-utils

    - name: 'Exporting pio'
      run: echo "/home/runner/.platformio/penv/bin" >> $GITHUB_PATH

    - name: Setup ccache
      uses: hendrikmuhs/ccache-action@v1.2
      with:
        create-symlink: true

    - name: Create additional ccache symlinks
      run: |
        ln -svf /usr/bin/ccache /usr/local/bin/aarch64-linux-gnu-gcc
        ln -svf /usr/bin/ccache /usr/local/bin/aarch64-linux-gnu-g++
        ln -svf /usr/bin/ccache /usr/local/bin/aarch64-linux-gnu-cpp
        ln -svf /usr/bin/ccache /usr/local/bin/aarch64-linux-gnu-c++

    - name: Checkout the sources
      run: ./update-sources.sh --${{ inputs['build-option'] }} --image ${{ inputs['image'] }}

    - name: Show repository information
      run: |
        case "${{ inputs['build-option'] }}" in
          "bootloader")
            COMPONENT_DIR="components/bootloader/uboot"
            ;;
          "rauc")
            COMPONENT_DIR="components/rauc/rauc"
            ;;
          "web")
            COMPONENT_DIR="components/meticulous-web-app"
            ;;
          "history")
            COMPONENT_DIR="components/meticulous-history-ui"
            ;;
          "plotter")
            COMPONENT_DIR="components/meticulous-plotter-ui"
            ;;
          *)
            COMPONENT_DIR="components/${{ inputs['build-option'] }}"
            if [ ! -f "${COMPONENT_DIR}/repository-info.txt" ]; then
              COMPONENT_DIR="components/meticulous-${{ inputs['build-option'] }}"
            fi
            ;;
        esac
        
        if [ -f "${COMPONENT_DIR}/repository-info.txt" ]; then
          echo "Found repository information at: ${COMPONENT_DIR}/repository-info.txt"
          echo "Content of repository-info.txt:"
          cat "${COMPONENT_DIR}/repository-info.txt"
        else
          echo "Warning: repository-info.txt not found in expected location"
        fi

    - name: Build components
      run: |
        export PATH=/usr/lib/ccache:/usr/local/bin:$PATH
        ./build-components.sh --${{ inputs['build-option'] }}

    - name: Copy repository information
      run: |
        case "${{ inputs['build-option'] }}" in
          "bootloader")
            sudo mkdir -p components/bootloader/build/repo-info/
            sudo cp components/bootloader/uboot/repository-info.txt components/bootloader/build/repo-info/
            ;;
          "linux")
            sudo mkdir -p components/linux-build/repo-info/
            sudo cp components/linux/repository-info.txt components/linux-build/repo-info/
            ;;
          "debian")
            sudo mkdir -p components/debian-base/repo-info/
            sudo cp components/debian-base/repository-info.txt components/debian-base/repo-info/
            ;;
          "psplash")
            sudo mkdir -p components/psplash-build/repo-info/
            sudo cp components/psplash/repository-info.txt components/psplash-build/repo-info/
            ;;
          "rauc")
            sudo mkdir -p components/rauc/build/repo-info/
            sudo cp components/rauc/rauc/repository-info.txt components/rauc/build/repo-info/
            ;;
          "dial")
            sudo mkdir -p components/meticulous-dial/out/make/deb/arm64/repo-info/
            sudo cp components/meticulous-dial/repository-info.txt components/meticulous-dial/out/make/deb/arm64/repo-info/
            ;;
          "web")
            sudo mkdir -p components/meticulous-web-app/out/repo-info/
            sudo cp components/meticulous-web-app/repository-info.txt components/meticulous-web-app/out/repo-info/
            ;;
          "firmware")
            sudo mkdir -p components/meticulous-firmware-build/repo-info/
            sudo cp components/meticulous-firmware/repository-info.txt components/meticulous-firmware-build/repo-info/
            ;;
          "history")
            sudo mkdir -p components/meticulous-history-ui/build/repo-info/
            sudo cp components/meticulous-history-ui/repository-info.txt components/meticulous-history-ui/build/repo-info/
            ;;
          "plotter")
            sudo mkdir -p components/meticulous-plotter-ui/build/repo-info/
            sudo cp components/meticulous-plotter-ui/repository-info.txt components/meticulous-plotter-ui/build/repo-info/
            ;;
        esac

    - name: Upload ${{ inputs['build-option'] }} artifact
      uses: actions/upload-artifact@v4
      if:  ${{ inputs['build-path'] != '' }}
      with:
        name: ${{ inputs['build-option'] }}
        path: ${{ inputs['build-path'] }}
        if-no-files-found: error
