name: Build an image component

on:
  workflow_dispatch:  # Allows manual triggering via the UI
    inputs:
      build-option:
        description: 'component to build'
        required: true
        type: string
      build-path:
        description: 'Custom path for artifacts to upload'
        required: false
        type: string
      image:
        description: 'Image config to use'
        required: true
        type: string
        default: 'nightly'
      runner:
          description: "Overwrite the default runner"
          type: string
          default: "ubuntu-24.04"

  workflow_call:  # Allows the workflow to be called from other workflows
    inputs:
      build-option:
        description: 'component to build'
        required: true
        type: string
      build-path:
        description: 'Custom path for artifacts to upload'
        required: true
        type: string
      image:
        description: 'Image config to use'
        type: string
        default: 'nightly'
      runner:
        description: "Overwrite the default runner"
        type: string
        default: "ubuntu-24.04"

permissions:
  contents: read
  actions: read
  id-token: write

run-name: "Build ${{ github.event.inputs.build-option }} from '${{github.event.inputs.image || 'unset' }}' on ${{ github.event.inputs.runner || 'ubuntu-24.04' }}"

jobs:
  build-component:
    runs-on: ${{ inputs['runner'] || 'ubuntu-24.04' }}
    name: Build ${{ inputs['build-option'] }}
    env:
      needs-deps: ${{ inputs['build-option'] != 'dial' && inputs['build-option'] != 'web' &&  inputs['build-option'] != 'plotter'}} 
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Git authentication
      run: |
        git config --global url."https://${{ secrets.GH_REPO_WORKFLOW }}:@github.com/".insteadOf "git@github.com:"

    - name: Set up QEMU
      if: ${{ fromJSON(env.needs-deps) }} 
      uses: docker/setup-qemu-action@v3

    - name: Install Ubuntu dependencies
      if: ${{ fromJSON(env.needs-deps) }} 
      run: ./update-sources.sh --install_ubuntu_dependencies

    - name: Install qemu-img
      if: ${{ fromJSON(env.needs-deps) }} 
      run: |
        sudo apt install -y qemu-utils qemu-user-static

    - name: 'Exporting pio'
      if: ${{ fromJSON(env.needs-deps) }} 
      run: echo "/home/runner/.platformio/penv/bin" >> $GITHUB_PATH

    - name: Setup ccache
      if: ${{ fromJSON(env.needs-deps) }} 
      uses: hendrikmuhs/ccache-action@v1.2
      with:
        create-symlink: true
        max-size: 1G

    - name: Create additional ccache symlinks
      if: ${{ fromJSON(env.needs-deps) }} 
      run: |
        ln -svf /usr/bin/ccache /usr/local/bin/aarch64-linux-gnu-gcc
        ln -svf /usr/bin/ccache /usr/local/bin/aarch64-linux-gnu-g++
        ln -svf /usr/bin/ccache /usr/local/bin/aarch64-linux-gnu-cpp
        ln -svf /usr/bin/ccache /usr/local/bin/aarch64-linux-gnu-c++

    - name: Checkout the sources
      run: ./update-sources.sh --${{ inputs['build-option'] }} --image ${{ inputs['image'] }}

    - name: Build components
      run: |
        export PATH=/usr/lib/ccache:/usr/local/bin:$PATH
        ./build-components.sh --${{ inputs['build-option'] }}

    - name: Copy repository information
      run: |
        echo "## ${{ inputs['build-option'] }}" >> /tmp/summary.txt
        case "${{ inputs['build-option'] }}" in
          "bootloader")
            sudo mkdir -p components/bootloader/build/repo-info/
            sudo cp components/bootloader/uboot/repository-info.txt components/bootloader/build/repo-info/
            cat /tmp/summary.txt components/bootloader/uboot/repository-info.txt >> $GITHUB_STEP_SUMMARY
            ;;
          "linux")
            sudo mkdir -p components/linux-build/repo-info/
            sudo cp components/linux/repository-info.txt components/linux-build/repo-info/
            cat /tmp/summary.txt components/linux/repository-info.txt >> $GITHUB_STEP_SUMMARY
            ;;
          "debian")
            sudo mkdir -p components/debian-base/repo-info/
            sudo cp components/debian-base/repository-info.txt components/debian-base/repo-info/
            cat /tmp/summary.txt components/debian-base/repository-info.txt >> $GITHUB_STEP_SUMMARY
            ;;
          "psplash")
            sudo mkdir -p components/psplash-build/repo-info/
            sudo cp components/psplash/repository-info.txt components/psplash-build/repo-info/
            cat /tmp/summary.txt components/psplash/repository-info.txt >> $GITHUB_STEP_SUMMARY
            ;;
          "rauc")
            sudo mkdir -p components/rauc/build/repo-info/
            sudo cp components/rauc/rauc/repository-info.txt components/rauc/build/repo-info/
            cat /tmp/summary.txt components/rauc/rauc/repository-info.txt >> $GITHUB_STEP_SUMMARY
            ;;
          "dial")
            sudo mkdir -p components/meticulous-dial/out/make/deb/arm64/repo-info/
            sudo cp components/meticulous-dial/repository-info.txt components/meticulous-dial/out/make/deb/arm64/repo-info/
            cat /tmp/summary.txt components/meticulous-dial/repository-info.txt >> $GITHUB_STEP_SUMMARY
            ;;
          "web")
            sudo mkdir -p components/meticulous-web-app/out/repo-info/
            sudo cp components/meticulous-web-app/repository-info.txt components/meticulous-web-app/out/repo-info/
            cat /tmp/summary.txt components/meticulous-web-app/repository-info.txt >> $GITHUB_STEP_SUMMARY
            ;;
          "firmware")
            sudo mkdir -p components/meticulous-firmware-build/repo-info/
            sudo cp components/meticulous-firmware/repository-info.txt components/meticulous-firmware-build/repo-info/
            cat /tmp/summary.txt components/meticulous-firmware/repository-info.txt >> $GITHUB_STEP_SUMMARY
            ;;
          "history")
            sudo mkdir -p components/meticulous-history-ui/build/repo-info/
            sudo cp components/meticulous-history-ui/repository-info.txt components/meticulous-history-ui/build/repo-info/
            cat /tmp/summary.txt components/meticulous-history-ui/repository-info.txt >> $GITHUB_STEP_SUMMARY
            ;;
          "plotter")
            sudo mkdir -p components/meticulous-plotter-ui/build/repo-info/
            sudo cp components/meticulous-plotter-ui/repository-info.txt components/meticulous-plotter-ui/build/repo-info/
            cat /tmp/summary.txt components/meticulous-plotter-ui/repository-info.txt >> $GITHUB_STEP_SUMMARY
            ;;
        esac

    - name: Upload ${{ inputs['build-option'] }} artifact
      uses: actions/upload-artifact@v4
      if:  ${{ inputs['build-path'] != '' }}
      with:
        name: ${{ inputs['build-option'] }}
        path: |
          ${{ inputs['build-path'] }}
          ${{ 
            inputs['build-option'] == 'bootloader' && 'components/bootloader/build/repo-info/**' ||
            inputs['build-option'] == 'dial' && 'components/meticulous-dial/out/make/deb/arm64/repo-info/**' ||
            inputs['build-option'] == 'debian' && 'components/debian-base/repo-info/**' ||
            ''
          }}
        if-no-files-found: error
