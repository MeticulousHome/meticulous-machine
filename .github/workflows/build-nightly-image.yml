name: Build image

on:
  schedule:
    - cron: '0 0 * * *'  # Nightly at midnight
  workflow_dispatch:  # Allows manual triggering
    inputs:
      image:
        description: Which image to build
        default: nightly

permissions:
  contents: read
  actions: read
  id-token: write

run-name: "Build ${{github.event.inputs.image || 'default (nightly)' }} image"

jobs:
  build-components:
    name: Build all image components
    secrets: inherit
    uses: meticuloushome/meticulous-machine/.github/workflows/build-all-components.yml@main
    with:
      image: ${{ inputs['image'] || 'nightly' }}

  build-root:
    name: Build RootFS
    runs-on: ubuntu-24.04
    needs: 
      - build-components
    steps:

    - name: Maximize build space
      uses: easimon/maximize-build-space@master
      with:
        root-reserve-mb: 6000
        swap-size-mb: 1024
        remove-dotnet: 'true'
        remove-android: 'true'
        remove-haskell: 'true'
        remove-codeql: 'true'
        remove-docker-images: 'true'

    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Git authentication
      run: |
        git config --global url."https://${{ secrets.GH_REPO_WORKFLOW }}@github.com/".insteadOf "git@github.com:"

    - name: Download bootloader artifact
      uses: actions/download-artifact@v4
      with:
        name: 'bootloader'
        path: components/bootloader/build/

    - name: Download linux artifact
      uses: actions/download-artifact@v4
      with:
        name: 'linux'
        path: components/linux-build

    - name: Download debian artifact
      uses: actions/download-artifact@v4
      with:
        name: 'debian'
        path: components/debian-base/

    - name: Download crash reporter artifact
      uses: actions/download-artifact@v4
      with:
        name: 'crash-reporter'
        path: components/crash-reporter/target

    - name: Download psplash artifact
      uses: actions/download-artifact@v4
      with:
        name: 'psplash'
        path: components/psplash-build

    - name: Download rauc artifact
      uses: actions/download-artifact@v4
      with:
        name: 'rauc'
        path:  components/rauc/build

    - name: Download dial artifact
      uses: actions/download-artifact@v4
      with:
        name: 'dial'
        path:  components/meticulous-dial/out/make/deb/arm64/

    - name: Download web artifact
      uses: actions/download-artifact@v4
      with:
        name: 'web'
        path:  components/meticulous-web-app/out/

    - name: Download firmware artifact
      uses: actions/download-artifact@v4
      with:
        name: 'firmware'
        path:  components/meticulous-firmware-build

    - name: Download plotter artifact
      uses: actions/download-artifact@v4
      with:
        name: 'plotter'
        path:  components/meticulous-plotter-ui/build/


    - name: Install Ubuntu dependencies
      run: ./update-sources.sh --install_ubuntu_dependencies

    - name: Install qemu-img
      run: |
        sudo apt install -y qemu-utils qemu-user-static

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3

    - name: 'Exporting pio'
      run: echo "/home/runner/.platformio/penv/bin" >> $GITHUB_PATH

    - name: Checkout all the python sources
      run: ./update-sources.sh  --backend --watcher --image ${{ inputs['image'] || 'nightly' }}

    - name: Write build channel to image-build-channel
      run: |
        echo "${{ inputs.image || 'nightly' }}" | sudo tee ./image-build-channel > /dev/null

    - name: Generate repository information
      run: |
        ./generate_repo_info.sh

    - name: Build rootfs
      run: |
        sudo ./make-rootfs.sh --all
        sudo cat rootfs/opt/summary.txt | sed 's/ ##$//g' >> $GITHUB_STEP_SUMMARY

    - name: Delete original debian rootfs
      run: rm -r ./components/debian-base/rootfs-base.tar.gz

    - name: Upload rootfs artifact
      uses: actions/upload-artifact@v4
      with:
        name: meticulous-rootfs.tar.gz
        path: meticulous-rootfs.tar.gz
        if-no-files-found: error

    - name: Build sdcard
      run: sudo ./make-sdcard.sh --image

    - name: Upload SDCard artifact
      uses: actions/upload-artifact@v4
      with:
        name: sdcard.img
        path: sdcard.img
        if-no-files-found: error

    - name: Upload EMMC artifact
      uses: actions/upload-artifact@v4
      with:
        name: emmc.img
        path: emmc.img
        if-no-files-found: error

  build-bundle:
    name: Build RAUC bundle
    needs: build-root
    runs-on: ubuntu-24.04

    steps:
    - name: Maximize build space
      uses: easimon/maximize-build-space@master
      with:
        root-reserve-mb: 6000
        swap-size-mb: 1024
        remove-dotnet: 'true'
        remove-android: 'true'
        remove-haskell: 'true'
        remove-codeql: 'true'
        remove-docker-images: 'true'

    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Git authentication
      run: |
        git config --global url."https://${{ secrets.GH_REPO_WORKFLOW }}@github.com/".insteadOf "git@github.com:"

    - name: Clone private repository
      uses: actions/checkout@v4
      with:
        repository: MeticulousHome/rauc-secrets
        token: ${{ secrets.GH_REPO_WORKFLOW }}
        path: components/rauc-secrets

    - name: Download rootfs artifact
      uses: actions/download-artifact@v4
      with:
        name: 'meticulous-rootfs.tar.gz'
        path: .

    - name: Download rauc artifact
      uses: actions/download-artifact@v4
      with:
        name: 'rauc'
        path:  components/rauc/build

    - name: Install Ubuntu dependencies
      run: |
        sudo apt update && sudo apt install -y pigz
        find components/rauc/build/
        sudo apt install --reinstall ./components/rauc/build/rauc_*_amd64.deb

    - name: Download bootloader artifact
      uses: actions/download-artifact@v4
      with:
        name: 'bootloader'
        path: components/bootloader/build/

    - name: Build Bootloader Bundle
      run: ./boot-bundle.sh --variant "${{ inputs.image || 'nightly' }}" --cert components/rauc-secrets/keys/beta.rsa4096.cert.pem --key components/rauc-secrets/keys/beta.rsa4096.key.pem

    - name: Upload Bootloader bundle
      uses: actions/upload-artifact@v4
      with:
        name: bootloader-bundle.raucb
        path: rauc_meticulous_boot_*.raucb
        if-no-files-found: error

    - name: Build Bundles
      run: ./make-ota.sh  --variant "${{ inputs.image || 'nightly' }}" --cert components/rauc-secrets/keys/beta.rsa4096.cert.pem --key components/rauc-secrets/keys/beta.rsa4096.key.pem

    - name: Upload EMMC bundle
      uses: actions/upload-artifact@v4
      with:
        name: emmc-bundle.raucb
        path: rauc_meticulous_emmc_*.raucb
        if-no-files-found: error

  deploy-emmc-bundle:
    name: Upload EMMC image to hawkbit
    needs: build-bundle
    runs-on: ubuntu-24.04
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Download emmc bundle
      uses: actions/download-artifact@v4
      with:
        name: 'emmc-bundle.raucb'
        path: .

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.x'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install requests attrs requests-toolbelt

    - name: Upload emmc bundle
      run: |
        python misc/hawkbit-upload.py \
          "${{ secrets.HAWKBIT_SERVER }}" \
          "${{ secrets.HAWKBIT_PORT }}" \
          *_emmc_*.raucb \
          ${{ secrets.HAWKBIT_USER }} \
          ${{ secrets.HAWKBIT_PASSWORD }} \
          "${{ github.event.inputs.image || 'nightly' }} EMMC" \
          "${{ github.event.inputs.image || 'nightly' }} Rootfs EMMC" \
          "$(date -u +'%Y-%m-%dT%H_%M_%S%z')" \
          "${{ github.event.inputs.image || 'nightly' }}" \
          "emmc"

  build-deployment-image:
    name: Build Deployment Image
    needs: build-root
    runs-on: ubuntu-24.04

    steps:
    - name: Maximize build space
      uses: easimon/maximize-build-space@master
      with:
        root-reserve-mb: 6000
        swap-size-mb: 1024
        remove-dotnet: 'true'
        remove-android: 'true'
        remove-haskell: 'true'
        remove-codeql: 'true'
        remove-docker-images: 'true'

    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Download sdcard artifact
      uses: actions/download-artifact@v4
      with:
        name: 'sdcard.img'
        path: .

    - name: Download bootloader artifact
      uses: actions/download-artifact@v4
      with:
        name: 'bootloader'
        path: components/bootloader/build/
  
    - name: Download rootfs artifact
      uses: actions/download-artifact@v4
      with:
        name: 'meticulous-rootfs.tar.gz '
        path: ./

    - name: Install Ubuntu dependencies
      run: sudo apt update && sudo apt install -y pigz qemu-utils e2fsprogs mount cloud-guest-utils

    - name: Build deployment image
      run: sudo ./make-deployment-image.sh --inplace

    - name: Rename image
      run: sudo mv sdcard.img deployment.img

    - name: Compress image
      run: pigz -kf deployment.img

    - name: Upload deployment image
      uses: actions/upload-artifact@v4
      with:
        name: deployment.img.gz
        path: deployment.img.gz
        if-no-files-found: error
